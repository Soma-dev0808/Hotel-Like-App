# spring.datasource.url=${DATABASE_URL}
# spring.datasource.username=${DATABASE_USERNAME}
# spring.datasource.password=${DATABASE_PASSWORD}
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.thymeleaf.cache=true
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# spring.jpa.hibernate.ddl-auto=update
# spring.sql.init.mode=always
# spring.jpa.show-sql=true



## CONNECTION TO POSTGRESQL
spring.datasource.url=jdbc:postgresql://ec2-18-215-41-121.compute-1.amazonaws.com:5432/dauc4ivmsuv4ro
spring.datasource.username=krdxtpuqgbleuz
spring.datasource.password=a2e53bc80c4396950ac3d657a57d9b6be4a1a8166c0ab569b45ebd6b4dba7c7f
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
### CONFIGS
spring.sql.init.mode=never
# spring.sql.init.mode = never is used to avoid the creation of the schema by spring boot.
# always is gonna allow to use the schema by spring boot.
spring.jpa.hibernate.ddl-auto=none
# none is for avoid the creation of the schema by hibernate
# update is gonna create tables if there is no
# create-drop will drop the tables once you stop the application, and create the tables once you start the application.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true
# true is shoe the sql queries on console.
spring.thymeleaf.cache=false
# false is avoid the caching of the thymeleaf template.
version=0.1.1
